#!/bin/bash

# Script de build pour ONA BTP Mobile
# Ce script facilite le d√©ploiement avec les nouvelles configurations de diagnostic

echo "üöÄ D√©marrage du build ONA BTP Mobile..."

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction pour afficher les messages
print_message() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# V√©rifier si on est dans le bon r√©pertoire
if [ ! -f "package.json" ]; then
    print_error "Ce script doit √™tre ex√©cut√© depuis le r√©pertoire racine du projet"
    exit 1
fi

print_message "V√©rification de l'environnement..."

# V√©rifier si Node.js est install√©
if ! command -v node &> /dev/null; then
    print_error "Node.js n'est pas install√©"
    exit 1
fi

# V√©rifier si npm est install√©
if ! command -v npm &> /dev/null; then
    print_error "npm n'est pas install√©"
    exit 1
fi

# V√©rifier si Ionic CLI est install√©
if ! command -v ionic &> /dev/null; then
    print_warning "Ionic CLI n'est pas install√©. Installation..."
    npm install -g @ionic/cli
fi

print_success "Environnement v√©rifi√©"

# Nettoyer les builds pr√©c√©dents
print_message "Nettoyage des builds pr√©c√©dents..."
rm -rf www/
rm -rf android/app/build/

# Installer les d√©pendances
print_message "Installation des d√©pendances..."
npm install

if [ $? -ne 0 ]; then
    print_error "√âchec de l'installation des d√©pendances"
    exit 1
fi

print_success "D√©pendances install√©es"

# Build de l'application
print_message "Build de l'application..."
ionic build

if [ $? -ne 0 ]; then
    print_error "√âchec du build"
    exit 1
fi

print_success "Build termin√©"

# Synchroniser avec Capacitor
print_message "Synchronisation avec Capacitor..."
ionic capacitor sync

if [ $? -ne 0 ]; then
    print_error "√âchec de la synchronisation Capacitor"
    exit 1
fi

print_success "Synchronisation Capacitor termin√©e"

# Build pour Android
print_message "Build pour Android..."
ionic capacitor build android

if [ $? -ne 0 ]; then
    print_error "√âchec du build Android"
    exit 1
fi

print_success "Build Android termin√©"

# V√©rifier les fichiers de configuration
print_message "V√©rification des configurations..."

# V√©rifier le fichier de configuration Capacitor
if [ ! -f "capacitor.config.ts" ]; then
    print_error "Fichier capacitor.config.ts manquant"
    exit 1
fi

# V√©rifier le fichier AndroidManifest.xml
if [ ! -f "android/app/src/main/AndroidManifest.xml" ]; then
    print_error "Fichier AndroidManifest.xml manquant"
    exit 1
fi

# V√©rifier le fichier de configuration r√©seau
if [ ! -f "android/app/src/main/res/xml/network_security_config.xml" ]; then
    print_error "Fichier network_security_config.xml manquant"
    exit 1
fi

print_success "Configurations v√©rifi√©es"

# Afficher les informations de diagnostic
print_message "Informations de diagnostic:"
echo "üì± Application: ONA BTP Mobile"
echo "üåê URL Odoo: https://btp.onaerp.com/jsonrpc"
echo "üóÑÔ∏è Base de donn√©es: btptst"
echo "üìÅ APK g√©n√©r√©: android/app/build/outputs/apk/debug/app-debug.apk"

print_success "Build termin√© avec succ√®s!"
print_message "Pour installer sur un appareil Android:"
echo "1. Activez le mode d√©veloppeur sur votre appareil"
echo "2. Activez le d√©bogage USB"
echo "3. Connectez votre appareil via USB"
echo "4. Ex√©cutez: ionic capacitor run android"

print_message "Pour tester la connexion:"
echo "1. Installez l'application sur votre appareil"
echo "2. Ouvrez l'application"
echo "3. Utilisez les outils de diagnostic int√©gr√©s"
echo "4. Consultez le guide DIAGNOSTIC_MOBILE.md"

echo ""
print_success "üéâ Build mobile ONA BTP termin√©!" 